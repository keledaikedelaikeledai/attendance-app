Project attendance_app {
  database_type: "PostgreSQL"
  Note: 'DBML schema generated for dbdiagram.io (updated 2025-10-16)'
}

Table "user" {
  id varchar [pk]
  name varchar [not null]
  email varchar [not null, unique]
  email_verified boolean [not null, default: false]
  image varchar
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  username varchar [unique]
  display_username varchar
  role varchar
  banned boolean [not null, default: false]
  ban_reason text
  ban_expires timestamp

  Note: 'Application users managed by Better Auth'
}

Table session {
  id varchar [pk]
  expires_at timestamp [not null]
  token varchar [not null, unique]
  user_id varchar [not null, ref: > "user".id]
  impersonated_by varchar
  ip_address varchar
  user_agent varchar
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  Note: 'Login sessions issued by Better Auth'
}

Table account {
  id varchar [pk]
  account_id varchar [not null]
  provider_id varchar [not null]
  user_id varchar [not null, ref: > "user".id]
  access_token text
  refresh_token text
  id_token text
  access_token_expires_at timestamp
  refresh_token_expires_at timestamp
  scope varchar
  password text
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  Note: 'Linked auth provider accounts'
}

Table verification {
  id varchar [pk]
  identifier varchar [not null]
  value varchar [not null]
  expires_at timestamp [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  Note: 'Verification tokens (email, password reset, etc.)'
}

Table shift {
  code varchar [pk]
  label varchar [not null]
  start varchar [not null]
  "end" varchar [not null]
  active boolean [not null, default: true]
  sort_order int [not null, default: 0]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  Note: 'Shift definitions (code-based) used for scheduling'
}

Table attendance_day {
  id varchar [pk]
  user_id varchar [not null, ref: > "user".id]
  date date [not null]
  selected_shift_code varchar
  shift_type varchar [not null, default: 'harian']
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  Note: 'Daily attendance record for a user'

  indexes {
    (user_id, date) [unique]
  }
}

Table attendance_log {
  id varchar [pk]
  user_id varchar [not null, ref: > "user".id]
  date date [not null]
  type varchar [not null]
  timestamp timestamp [not null]
  lat double
  lng double
  accuracy double
  shift_code varchar
  shift_type varchar
  early_reason text
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  Note: 'Clock-in / clock-out events captured for attendance'
}

// Optional, application-level references (not enforced by FK constraints)
Ref: attendance_day.selected_shift_code > shift.code [note: 'Managed in application logic']
Ref: attendance_log.shift_code > shift.code [note: 'Managed in application logic']